package parsers

import scala.util.parsing.combinator._

/**
 * Parse the NCBI BLAST[PN] file format (proteins and translated nucleotides):
 * obtain an ExcelCSV from FileAndContents using [[BlastParser]] (demo
 * in [[BlastParserDemoApp]]).
 * @see [[https://en.wikipedia.org/wiki/BLAST]]
 */
package object blast {

  /**
   * Output of BLAST parsing: rows of text columns (Excel-compatible
   * quoting of comma-containing strings).
   */
  type ExcelCSV = Seq[Seq[String]]

  /**
   * [[BlastParserCompanion]]s can pattern match a FileAndContents to
   * determine parsability by a [[BlastParser]].
   */
  type FileAndContents = (java.io.File, String)

  /**
   * Messages generated by parsing.
   */
  type Log = Seq[String]

  protected[blast] type Logger = scala.collection.generic.Growable[String]

  type Success = BlastParser#Success[ExcelCSV]

  type Failure = BlastParser#Failure

  type Error = BlastParser#Error

  /** A valid but empty parser input. */
  protected[blast] val Empty = new scala.util.parsing.input.CharSequenceReader("")

  /**
   * [[BlastParser]] result: a Success[ExcelCSV] or Failure,
   * accompanied by a diagnostic log to be shown to users.
   * @see scala.util.parsing.combinator.Parsers
   */
  case class BlastParseResult(status: BlastParser#ParseResult[ExcelCSV], log: Log)

} // end of package blast

